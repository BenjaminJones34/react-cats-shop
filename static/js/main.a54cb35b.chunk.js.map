{"version":3,"sources":["components/BasketButton.js","components/Cat.js","components/CartList.js","components/Modal.js","components/Cart.js","components/Main.js","components/CheckOut.js","components/CatPage.js","App.js","index.js"],"names":["StyledForm","styled","form","BasketButton","name","price","breed","HandleBasket","HandleSend","url","desc","onSubmit","e","preventDefault","type","StyledCat","div","Cat","id","mainDesc","src","alt","className","to","pathname","state","CartList","props","cartObject","itemsInCart","map","item","index","onClick","setCartObject","newArray","splice","showModal","wallet","removeItem","Background","ModalWrapper","ModalContent","CloseModalButton","MdClose","Modal","totalArray","purchaseTotal","i","length","parseFloat","toFixed","toString","amountOfItems","calculateTotal","disabled","CartContainer","Cart","StyledPetBox","StyledTitle","h1","Main","useState","theData","setData","curprice","setPrice","useEffect","HandleFetch","a","fetch","response","json","data","faker","findName","commerce","animal","cat","productAdjective","address","cityName","parseInt","tempCart","ButtonLinks","CheckOut","list","alert","StyledCatPage","StyledButton","CatPage","location","useLocation","history","useHistory","undefined","push","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"sQAkBMA,EAAaC,IAAOC,KAAV,0HASDC,EAzBM,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,KAAMC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,KAStE,OACI,cAACV,EAAD,CAAYW,SARK,SAACC,GAClBA,EAAEC,iBACFN,EAAaF,GACbG,EAAWJ,EAAMC,EAAOC,EAAOG,EAAKC,IAKpC,SACI,wBAAQI,KAAK,SAAST,MAAOA,EAA7B,4B,OCgCNU,EAAYd,IAAOe,IAAV,umBAgCAC,EAzEH,SAAC,GAUN,IATLb,EASI,EATJA,KACAE,EAQI,EARJA,MACAI,EAOI,EAPJA,KACAL,EAMI,EANJA,MACAa,EAKI,EALJA,GACAT,EAII,EAJJA,IACAF,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAW,EACI,EADJA,SAEA,OACE,eAACJ,EAAD,WACE,qBAAKK,IAAKX,EAAKY,IAAI,KACnB,sBAAKC,UAAU,UAAf,UACE,4BAAIlB,IACJ,wCAAWE,KACX,uCAAUI,KACV,qCAAKL,KACL,cAAC,IAAD,CACEkB,GAAI,CACFC,SAAS,IAAD,OAAMN,GACdO,MAAO,CAAErB,OAAME,QAAOI,OAAML,QAAOa,KAAIT,MAAKU,aAHhD,uBAQA,cAAC,EAAD,CACEf,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPG,IAAKA,EACLC,KAAMA,EACNH,aAAcA,EACdC,WAAYA,W,QCLPkB,EAjCS,SAACC,GA8BvB,OAtBWA,EAAMC,WAAWC,YAAYC,KAAI,SAACC,EAAMC,GAAP,OAC1C,sBAAKV,UAAU,OAAOJ,GAAIc,EAA1B,UACE,qBAAKV,UAAU,eAAf,SACE,qBAAKF,IAAKW,EAAKtB,IAAKY,IAAI,UAE1B,qBAAKC,UAAU,cAAf,SACE,4BAAIS,EAAK3B,SAEX,qBAAKkB,UAAU,eAAf,SACE,4BAAI,OAAMS,EAAK1B,UAEjB,qBAAKiB,UAAU,gBAAf,SACE,wBACEW,QAAS,kBAnBI,SAACD,EAAOJ,EAAYM,GACnC,IAAIC,EAAWP,EAAWC,YAE1B,OADAM,EAASC,OAAOJ,EAAO,GAChBE,EAAc,CAACL,YAAaM,EAAUE,UAAWT,EAAWS,UAAWC,OAAQV,EAAWU,SAiB7FC,CAAWP,EAAOL,EAAMC,WAAYD,EAAMO,gBAF9C,6BCmCFM,EAAavC,IAAOe,IAAV,gPAYVyB,EAAexC,IAAOe,IAAV,0ZAiBZ0B,EAAezC,IAAOe,IAAV,ivFAsHZ2B,EAAmB1C,YAAO2C,IAAP3C,CAAH,qLAWP4C,EAhNM,SAAClB,GAElB,IAeImB,EAfmB,SAAClB,GAEpB,IADA,IAAImB,EAAgB,EACXC,EAAI,EAAGA,EAAIpB,EAAWC,YAAYoB,OAAQD,IAC/CD,GAAiBG,WAAWtB,EAAWC,YAAYmB,GAAG3C,OAE1D0C,EAAgBA,EAAcI,QAAQ,GAAGC,WACzC,IAAIC,EAAgBzB,EAAWC,YAAYoB,OAMzC,MAAO,CAACF,EAJY,IAAlBM,EACoB,SAEH,UAAMA,EAAN,WAIRC,CAAe3B,EAAMC,YAEtC,OACI,mCACKD,EAAMC,WAAWS,UACd,cAACG,EAAD,UACG,cAACC,EAAD,CAAcJ,UAAWV,EAAMC,WAAWS,UAA1C,SACI,eAACK,EAAD,WACI,cAACC,EAAD,CAAkB,aAAW,cAAcV,QAAS,WAAON,EAAMO,cAAc,CAACL,YAAaF,EAAMC,WAAWC,YAAaQ,WAAYV,EAAMC,WAAWS,UAAWC,OAAQX,EAAMC,WAAWU,YAC5L,wCAAWQ,EAAW,MACtB,qBAAKxB,UAAU,OAAf,SACC,cAAC,EAAD,CAAUM,WAAYD,EAAMC,WAAYM,cAAeP,EAAMO,kBAE9D,sBAAKZ,UAAU,eAAf,UACI,sBAAKA,UAAU,mBAAf,UACK,oBAAGA,UAAU,gBAAb,oBAAqC,OAAMwB,EAAW,MACtD,uDAAuBI,WAAWvB,EAAMC,WAAWU,QAAQa,QAAQ,SAExE,qBAAK7B,UAAU,kBAAf,SACK,cAAC,IAAD,CAAMC,GAAG,YAAT,SACI,wBAAQgC,SAAkD,IAAxC5B,EAAMC,WAAWC,YAAYoB,QAAgBtB,EAAMC,WAAWU,OAASQ,EAAW,GAApG,2CAQ1B,QC/CRU,EAAgBvD,IAAOe,IAAV,8xBA8CJyC,EAhBF,SAAC9B,GAKV,OACI,qBAAKL,UAAU,GAAf,SACI,eAACkC,EAAD,WACI,wBAAQvB,QAPF,WACdN,EAAMO,cAAc,CAAEL,YAAaF,EAAMC,WAAWC,YAAaQ,WAAYV,EAAMC,WAAWS,UAAWC,OAAQX,EAAMC,WAAWU,UAM9FhB,UAAU,aAAtC,kBACA,cAAC,EAAD,CAAOM,WAAYD,EAAMC,WAAYM,cAAeP,EAAMO,sB,iBCwBpEwB,EAAezD,IAAOe,IAAV,oGAKZ2C,EAAc1D,IAAO2D,GAAV,mDAGFC,EApEF,SAAClC,GACZ,MAA2BmC,mBAAS,IAApC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA6BF,mBAAS,GAAtC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAW,uCAAG,kCAAAC,EAAA,sEACGC,MACnB,uDAFgB,cACdC,EADc,gBAIDA,EAASC,OAJR,OAKlB,IADIC,EAJc,OAKTzB,EAAI,EAAGA,EAAIyB,EAAKxB,OAAQD,KACzBjB,EAAO0C,EAAKzB,IACb5C,KAAOsE,IAAMtE,KAAKuE,WACvB5C,EAAK1B,MAAQqE,IAAME,SAASvE,QAC5B0B,EAAKzB,MAAQoE,IAAMG,OAAOC,MAC1B/C,EAAKrB,KAAOgE,IAAME,SAASG,mBAC3BhD,EAAKZ,SAAWuD,IAAMM,QAAQC,WAEhCjB,EAAQS,GAbU,2CAAH,qDAgBXlE,EAAe,SAACF,GACpB6D,EAASD,EAAWiB,SAAS7E,KAGzBG,EAAa,SAACJ,EAAMC,EAAOC,EAAOG,EAAKC,GAC3C,IAAIoE,EAAM,CACR1E,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPG,IAAKA,EACLC,KAAMA,GAEJyE,EAAWxD,EAAMC,WACrBuD,EAAStD,YAAT,sBAA2BsD,EAAStD,aAApC,CAAiDiD,IACjDnD,EAAMO,cAAciD,IAGtB,OACE,gCACE,cAACxB,EAAD,2BACA,uDAAuBT,WAAWvB,EAAMC,WAAWU,QAAQa,QAAQ,MACnE,cAAC,EAAD,CAAMvB,WAAYD,EAAMC,WAAYM,cAAeP,EAAMO,gBAEzD,cAACwB,EAAD,CAAcpC,UAAU,SAAxB,SACGyC,EAAQjC,KAAI,SAACC,EAAMC,GAAP,OACX,cAAC,EAAD,2BAEMD,GAFN,IAGExB,aAAcA,EACdC,WAAYA,IAHPwB,Y,OCOXoD,EAAcnF,IAAOe,IAAV,8BAIXU,EAAWzB,IAAOe,IAAV,m/CAoECqE,EApIE,SAAC1D,GAEd,IAeImB,EAfmB,SAAClB,GAEpB,IADA,IAAImB,EAAgB,EACXC,EAAI,EAAGA,EAAIpB,EAAWC,YAAYoB,OAAQD,IAC/CD,GAAiBG,WAAWtB,EAAWC,YAAYmB,GAAG3C,OAE1D0C,EAAgBA,EAAcI,QAAQ,GAAGC,WACzC,IAAIC,EAAgBzB,EAAWC,YAAYoB,OAMzC,MAAO,CAACF,EAJY,IAAlBM,EACoB,SAEH,UAAMA,EAAN,WAIRC,CAAe3B,EAAMC,YAElC0D,EAAO3D,EAAMC,WAAWC,YAAYC,KAAI,SAACC,EAAMC,GAAP,OAAiB,sBAAKV,UAAU,OAAOJ,GAAIc,EAA1B,UACG,qBAAKV,UAAU,eAAf,SACI,qBAAKF,IAAKW,EAAKtB,IAAKY,IAAI,UAE5B,qBAAKC,UAAU,cAAf,SACI,4BAAIS,EAAK3B,SAEb,qBAAKkB,UAAU,eAAf,SACI,4BAAI,OAAMS,EAAK1B,gBAUnF,OACI,gCACI,2CACA,6DACA,cAAC,EAAD,UACI,qBAAKiB,UAAU,OAAf,SACKgE,MAGT,kDAAkBxC,EAAW,MAC7B,kDAAkBI,WAAWvB,EAAMC,WAAWU,QAAQa,QAAQ,MAC9D,eAACiC,EAAD,WACI,cAAC,IAAD,CAAM7D,GAAG,IAAT,SACI,wBAAQD,UAAU,OAAlB,uBAEJ,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,wBAAQD,UAAU,WAAWW,QArBtB,WACnBN,EAAMO,cAAc,CAAEL,YAAa,GAAIQ,WAAW,EAAOC,OAAQX,EAAMC,WAAWU,OAASQ,EAAW,KACtGyC,MAAM,yBAmBM,oCCxBdC,EAAgBvF,IAAOe,IAAV,iJASbyE,EAAexF,IAAOe,IAAV,+HASH0E,EA/CC,WACd,IAAMC,EAAWC,cACXC,EAAUC,cAEhB,EAA6CH,EAASlE,MAA9CrB,EAAR,EAAQA,KAAME,EAAd,EAAcA,MAAOI,EAArB,EAAqBA,KAAMD,EAA3B,EAA2BA,IAAKU,EAAhC,EAAgCA,SAShC,YAH0B4E,IAAtBJ,EAASlE,MAAMP,IACjB2E,EAAQG,KAAK,KAGb,gCACE,cAACP,EAAD,UACE,wBAAQxD,QAVK,WACjB4D,EAAQG,KAAK,MAST,oBAEF,eAACR,EAAD,WACE,4CAAepF,KACf,qBAAKgB,IAAKX,IACV,wCAAWH,KACX,wDAA2BI,KAC3B,8CAAiBS,YCKV8E,GAxBH,WACR,MAAoCnC,mBAAS,CACzCjC,YAAa,GACbQ,WAAW,EACXC,OAAQ,SAHZ,mBAAOV,EAAP,KAAmBM,EAAnB,KAMA,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgE,KAAK,YAAZ,SACE,cAAC,EAAD,CAAUtE,WAAYA,EAAYM,cAAeA,MAEnD,cAAC,IAAD,CAAOgE,KAAK,OAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,CAAMvE,WAAYA,EAAYM,cAAeA,YCpBzDkE,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.a54cb35b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst BasketButton = ({name, price, breed, HandleBasket, HandleSend, url, desc}) => {\r\n    \r\n    const HandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        HandleBasket(price);\r\n        HandleSend(name, price, breed, url, desc);\r\n        \r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={HandleSubmit}>\r\n            <button type=\"submit\" price={price}>Add to Cart</button>\r\n        </StyledForm>\r\n    )\r\n};\r\n\r\nconst StyledForm = styled.form`\r\nbutton {    \r\nbackground-color: #E8A87C;\r\n\r\n}\r\nbutton:hover {\r\n    transform: scale(1.1);\r\n}\r\n`\r\nexport default BasketButton;","import styled from \"styled-components\";\r\nimport BasketButton from \"./BasketButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Cat = ({\r\n  name,\r\n  breed,\r\n  desc,\r\n  price,\r\n  id,\r\n  url,\r\n  HandleBasket,\r\n  HandleSend,\r\n  mainDesc\r\n}) => {\r\n  return (\r\n    <StyledCat>\r\n      <img src={url} alt=\"\"></img>\r\n      <div className=\"textBox\">\r\n        <p>{name}</p>\r\n        <p>Breed: {breed}</p>\r\n        <p>Desc: {desc}</p>\r\n        <p>£{price}</p>\r\n        <Link\r\n          to={{\r\n            pathname: `/${id}`,\r\n            state: { name, breed, desc, price, id, url, mainDesc },\r\n          }}\r\n        >\r\n          More Info\r\n        </Link>\r\n        <BasketButton\r\n          name={name}\r\n          price={price}\r\n          breed={breed}\r\n          url={url}\r\n          desc={desc}\r\n          HandleBasket={HandleBasket}\r\n          HandleSend={HandleSend}\r\n        />\r\n      </div>\r\n    </StyledCat>\r\n  );\r\n};\r\n\r\nconst StyledCat = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 2px solid black;\r\n  width: 20%;\r\n  min-height: 30%;\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n  img:hover {\r\n    transform: scale(1.4);\r\n    border: 2px solid black;\r\n  }\r\n  .textBox {\r\n    display: flex;\r\n    border-top: 2px solid black;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background-color: #41b3a3;\r\n    flex: 1;\r\n    padding-bottom: 5px;\r\n  }\r\n  p {\r\n    width: 100%;\r\n  }\r\n  p:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\nexport default Cat;\r\n","export const CartList = (props) => {\r\n\r\n    const removeItem = (index, cartObject, setCartObject) => {\r\n        let newArray = cartObject.itemsInCart\r\n        newArray.splice(index, 1)\r\n        return setCartObject({itemsInCart: newArray, showModal: cartObject.showModal, wallet: cartObject.wallet})\r\n    }\r\n\r\n  let list = props.cartObject.itemsInCart.map((item, index) => (\r\n    <div className=\"item\" id={index}>\r\n      <div className=\"imageSection\">\r\n        <img src={item.url} alt=\"Cat\"></img>\r\n      </div>\r\n      <div className=\"nameSection\">\r\n        <p>{item.name}</p>\r\n      </div>\r\n      <div className=\"priceSection\">\r\n        <p>{\"£\" + item.price}</p>\r\n      </div>\r\n      <div className=\"buttonSection\">\r\n        <button\r\n          onClick={() =>\r\n            removeItem(index, props.cartObject, props.setCartObject)\r\n          }\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ));\r\n  return list;\r\n};\r\n\r\nexport default CartList;\r\n","import styled from \"styled-components\"\r\nimport { MdClose } from \"react-icons/md\"\r\nimport CartList from \"./CartList\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const Modal = (props) => {\r\n\r\n    const calculateTotal = (cartObject) => {\r\n        let purchaseTotal = 0\r\n        for (let i = 0; i < cartObject.itemsInCart.length; i++) {\r\n            purchaseTotal += parseFloat(cartObject.itemsInCart[i].price)\r\n        }\r\n        purchaseTotal = purchaseTotal.toFixed(2).toString()\r\n        let amountOfItems = cartObject.itemsInCart.length\r\n        let amountOfItemsText = \"\"\r\n        if (amountOfItems === 1) {\r\n            amountOfItemsText = \"1 item\"\r\n        } else {\r\n            amountOfItemsText = `${amountOfItems} items`\r\n        } return [purchaseTotal, amountOfItemsText]\r\n    }\r\n\r\n    let totalArray = calculateTotal(props.cartObject)\r\n\r\n    return (\r\n        <>\r\n            {props.cartObject.showModal ? (\r\n                <Background>\r\n                   <ModalWrapper showModal={props.cartObject.showModal}>\r\n                       <ModalContent>\r\n                           <CloseModalButton aria-label=\"Close modal\" onClick={() => {props.setCartObject({itemsInCart: props.cartObject.itemsInCart, showModal: !props.cartObject.showModal, wallet: props.cartObject.wallet})}} />\r\n                           <h1>Cart: {totalArray[1]}</h1>\r\n                           <div className=\"list\">\r\n                            <CartList cartObject={props.cartObject} setCartObject={props.setCartObject} />\r\n                           </div>\r\n                           <div className=\"totalSection\">\r\n                               <div className=\"totalTextSection\">\r\n                                    <p className=\"purchaseTotal\">Total: {\"£\" + totalArray[0]}</p>\r\n                                    <p>Amount in wallet: £{parseFloat(props.cartObject.wallet).toFixed(2)}</p>\r\n                               </div>\r\n                               <div className=\"purchaseSection\">\r\n                                    <Link to=\"/checkOut\">\r\n                                        <button disabled={props.cartObject.itemsInCart.length === 0 || props.cartObject.wallet < totalArray[0] ? true : false}>Go to check-out</button>\r\n                                    </Link>\r\n                               </div>\r\n                           </div>\r\n                       </ModalContent>\r\n                   </ModalWrapper>\r\n                </Background>\r\n            )\r\n            : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Background = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: fixed;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0;\r\n    padding: 0;\r\n`\r\n\r\nconst ModalWrapper = styled.div`\r\n    width: 90vw;\r\n    height: fit;\r\n    padding-bottom: 20px;\r\n    box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n    background: orange;\r\n    border: 5px groove red;\r\n    color: #000;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    position: relative;\r\n    z-index: 10;\r\n    border-radius: 10px;\r\n    max-height: 85vh;\r\n    overflow-y: auto;\r\n    margin-bottom: 100px;\r\n`\r\nconst ModalContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center\r\n    align-items: center;\r\n    width: 85vw;\r\n\r\n    h1 {\r\n        margin-left: 40px;\r\n        font-size: 3em;\r\n        color: purple;\r\n        text-decoration: underline;\r\n    }\r\n\r\n    .list {\r\n        width: 95%;\r\n        margin-left: 50px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        height: 100%;\r\n        padding-right: 10px;\r\n        padding-left: 0px;\r\n        border: 6px solid grey;\r\n        border-left: none;\r\n        border-bottom: none;\r\n\r\n        .imageSection {\r\n            height: 200px;\r\n            width: 30%;\r\n            text-align: center;\r\n            padding-top: 20px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        img {\r\n            max-height: 200px;\r\n            max-width: 250px;\r\n        }\r\n\r\n        .nameSection {\r\n            width: 20%;\r\n            font-size: 1.5em;\r\n\r\n            text-shadow: 2px 2px 4px grey;\r\n        }\r\n\r\n        .priceSection {\r\n            width: 20%;\r\n            font-size: 1.5em;\r\n           \r\n            color: green;\r\n            font-weight: 900;\r\n        }\r\n\r\n        .buttonSection {\r\n            width: 30%;\r\n            text-align: center;\r\n        }\r\n\r\n        button {\r\n            height: 50px;\r\n            width: 100px;\r\n            font-size: 1.2em;\r\n            margin-left: 50px;\r\n            cursor: pointer;\r\n            background-color: red;\r\n            color: whitesmoke;\r\n        }\r\n\r\n        .item {\r\n            display: flex;\r\n            align-items: center;\r\n            width: 100%;\r\n            border-bottom: 8px groove rgba(0, 153, 153, 0.8);\r\n            border-left: 10px ridge rgba(0, 153, 153, 0.8);\r\n            background-color: rgb(255, 190, 100)\r\n        }\r\n\r\n    }\r\n        .totalSection {\r\n            display: flex;\r\n\r\n            .purchaseSection {\r\n                width: 50%;\r\n                display: flex;\r\n                justify-content: flex-end;\r\n            }\r\n\r\n            .totalTextSection {\r\n                width: 50%;\r\n            }\r\n\r\n            button {\r\n                height: 100px;\r\n                width: 200px;\r\n                margin-top: 20px;\r\n                font-size: 2em;\r\n                background-color: blue;\r\n                color: white;\r\n                cursor: pointer;\r\n                border-radius: 10px;\r\n                margin-right: 20px;\r\n            }\r\n        }\r\n\r\n        .purchaseTotal {\r\n            font-size: 3em;\r\n            margin-left: 150px;\r\n            margin-bottom: 30px;\r\n            font-weight: bold;\r\n            color: green;\r\n            text-shadow: 2px 2px 2px black;\r\n            text-decoration: underline;\r\n        }\r\n    }\r\n`\r\nconst CloseModalButton = styled(MdClose)`\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n    width: 32px;\r\n    height: 32px;\r\n    padding: 0;\r\n    z-index: 10;\r\n`\r\n\r\nexport default Modal","import styled from \"styled-components\"\r\nimport Modal from \"./Modal\"\r\n\r\nconst CartContainer = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n\r\n    .cartButton {\r\n        height: 50px;\r\n        width: 100px;\r\n        cursor: pointer;\r\n        border-radius: 3px;\r\n        font-size: 1.3em;\r\n        margin: 10px;\r\n        background-image: linear-gradient(180deg, rgba(0, 0, 230, 1), rgba(0, 153, 255, 1));\r\n        color: whitesmoke;\r\n        text-shadow: 2px 2px 5px black;\r\n        transform: scale(1);\r\n        transition: text-shadow 0.2s, transform 0.2s, font-size 0.1s;\r\n    }\r\n\r\n    .cartButton:hover {\r\n        transform: scale(1.2);\r\n        text-shadow: 1px 1px 4px gold;\r\n        font-size: 1.6em;\r\n        transition: transform 0.2s, text-shadow 0.2s, font-size 0.15s;\r\n    }\r\n    .cartButton:hover {\r\n        transform: scale(1.1);\r\n    }\r\n    \r\n`\r\n\r\nconst Cart = (props) => {\r\n    const openModal = () => {\r\n        props.setCartObject({ itemsInCart: props.cartObject.itemsInCart, showModal: !props.cartObject.showModal, wallet: props.cartObject.wallet})\r\n    }\r\n    \r\n    return (\r\n        <div className=\"\">\r\n            <CartContainer>\r\n                <button onClick={openModal} className=\"cartButton\">Cart</button>\r\n                <Modal cartObject={props.cartObject} setCartObject={props.setCartObject}/>\r\n            </CartContainer>  \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cart","import Cat from \"./Cat.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Cart from \"./Cart\";\r\nimport faker from \"faker\";\r\n\r\nconst Main = (props) => {\r\n  const [theData, setData] = useState([]);\r\n  const [curprice, setPrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    HandleFetch();\r\n  }, []);\r\n\r\n  const HandleFetch = async () => {\r\n    let response = await fetch(\r\n      \"https://api.thecatapi.com/v1/images/search?limit=12\"\r\n    );\r\n    let data = await response.json();\r\n    for (let i = 0; i < data.length; i++) {\r\n      const item = data[i];\r\n      item.name = faker.name.findName();\r\n      item.price = faker.commerce.price();\r\n      item.breed = faker.animal.cat();\r\n      item.desc = faker.commerce.productAdjective();\r\n      item.mainDesc = faker.address.cityName();\r\n    }\r\n    setData(data);\r\n  };\r\n\r\n  const HandleBasket = (price) => {\r\n    setPrice(curprice + parseInt(price));\r\n  };\r\n\r\n  const HandleSend = (name, price, breed, url, desc) => {\r\n    let cat = {\r\n      name: name,\r\n      price: price,\r\n      breed: breed,\r\n      url: url,\r\n      desc: desc,\r\n    };\r\n    let tempCart = props.cartObject;\r\n    tempCart.itemsInCart = [...tempCart.itemsInCart, cat];\r\n    props.setCartObject(tempCart);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StyledTitle> Cats 4 Lyfe</StyledTitle>\r\n      <p>Amount in wallet: £{parseFloat(props.cartObject.wallet).toFixed(2)}</p>\r\n      <Cart cartObject={props.cartObject} setCartObject={props.setCartObject} />\r\n\r\n      <StyledPetBox className=\"petBox\">\r\n        {theData.map((item, index) => (\r\n          <Cat\r\n            key={index}\r\n            {...item}\r\n            HandleBasket={HandleBasket}\r\n            HandleSend={HandleSend}\r\n          />\r\n        ))}\r\n      </StyledPetBox>\r\n    </div>\r\n  );\r\n};\r\nconst StyledPetBox = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`;\r\nconst StyledTitle = styled.h1`\r\n  text-align: center;\r\n`;\r\nexport default Main;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CheckOut = (props) => {\r\n    \r\n    const calculateTotal = (cartObject) => {\r\n        let purchaseTotal = 0\r\n        for (let i = 0; i < cartObject.itemsInCart.length; i++) {\r\n            purchaseTotal += parseFloat(cartObject.itemsInCart[i].price)\r\n        }\r\n        purchaseTotal = purchaseTotal.toFixed(2).toString()\r\n        let amountOfItems = cartObject.itemsInCart.length\r\n        let amountOfItemsText = \"\"\r\n        if (amountOfItems === 1) {\r\n            amountOfItemsText = \"1 item\"\r\n        } else {\r\n            amountOfItemsText = `${amountOfItems} items`\r\n        } return [purchaseTotal, amountOfItemsText]\r\n    }\r\n\r\n    let totalArray = calculateTotal(props.cartObject)\r\n\r\n    let list = props.cartObject.itemsInCart.map((item, index) => <div className=\"item\" id={index}>\r\n                                                                    <div className=\"imageSection\">\r\n                                                                        <img src={item.url} alt=\"Cat\"></img>\r\n                                                                    </div>\r\n                                                                    <div className=\"nameSection\">\r\n                                                                        <p>{item.name}</p>\r\n                                                                    </div>\r\n                                                                    <div className=\"priceSection\">\r\n                                                                        <p>{\"£\" + item.price}</p>\r\n                                                                    </div>\r\n                                                                </div>\r\n    )\r\n\r\n    const handlePurchase = () => {\r\n        props.setCartObject({ itemsInCart: [], showModal: false, wallet: props.cartObject.wallet - totalArray[0]})\r\n        alert(\"Purchase successful!\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Check-out</h1>\r\n            <p>Please confirm your purchase</p>\r\n            <CartList>\r\n                <div className=\"list\">\r\n                    {list}\r\n                </div>\r\n            </CartList>\r\n            <p>Total price: £{totalArray[0]}</p>\r\n            <p>Your wallet: £{parseFloat(props.cartObject.wallet).toFixed(2)}</p>\r\n            <ButtonLinks>\r\n                <Link to=\"/\">\r\n                    <button className=\"back\">Go back</button>\r\n                </Link>\r\n                <Link to=\"/\">\r\n                    <button className=\"purchase\" onClick={handlePurchase}>Make purchase</button>\r\n                </Link>\r\n            </ButtonLinks>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ButtonLinks = styled.div`\r\n\r\n`\r\n\r\nconst CartList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center\r\n    align-items: center;\r\n    width: 85vw;\r\n\r\n    h1 {\r\n        margin-left: 40px;\r\n        font-size: 3em;\r\n        color: purple;\r\n        text-decoration: underline;\r\n    }\r\n\r\n    .list {\r\n        width: 95%;\r\n        margin-left: 50px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        height: 100%;\r\n        padding-right: 10px;\r\n        padding-left: 0px;\r\n        border: 6px solid grey;\r\n        border-left: none;\r\n        border-bottom: none;\r\n\r\n        .imageSection {\r\n            height: 200px;\r\n            width: 30%;\r\n            text-align: center;\r\n            padding-top: 20px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        img {\r\n            max-height: 200px;\r\n            max-width: 250px;\r\n        }\r\n\r\n        .nameSection {\r\n            width: 20%;\r\n            font-size: 1.5em;\r\n\r\n            text-shadow: 2px 2px 4px grey;\r\n        }\r\n\r\n        .priceSection {\r\n            width: 20%;\r\n            font-size: 1.5em;\r\n           \r\n            color: green;\r\n            font-weight: 900;\r\n        }\r\n\r\n        .item {\r\n            display: flex;\r\n            align-items: center;\r\n            width: 100%;\r\n            border-bottom: 8px groove rgba(0, 153, 153, 0.8);\r\n            border-left: 10px ridge rgba(0, 153, 153, 0.8);\r\n            background-color: rgb(255, 190, 100)\r\n        }\r\n\r\n    }\r\n`\r\n\r\nexport default CheckOut","import { useLocation, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CatPage = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const { name, breed, desc, url, mainDesc } = location.state;\r\n\r\n  const handleHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  if (location.state.id === undefined) {\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <div>\r\n      <StyledButton>\r\n        <button onClick={handleHome}>Home</button>\r\n      </StyledButton>\r\n      <StyledCatPage>\r\n        <h1>Cat name: {name}</h1>\r\n        <img src={url} />\r\n        <p>Breed: {breed}</p>\r\n        <p>One words description: {desc}</p>\r\n        <p>Pickup from: {mainDesc}</p>\r\n      </StyledCatPage>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledCatPage = styled.div`\r\n  text-align: center;\r\n  img {\r\n    max-width: 50%;\r\n    border-radius: 10%;\r\n    border: 3px solid goldenrod;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  height: 25px;\r\n  button {\r\n    width: 15%;\r\n  }\r\n`;\r\n\r\nexport default CatPage;\r\n","import './App.css';\r\nimport { useState } from \"react\"\r\nimport Main from \"./components/Main\"\r\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\r\nimport CheckOut from './components/CheckOut';\r\nimport CatPage from \"./components/CatPage\";\r\n\r\nconst App = () => {\r\n    const [cartObject, setCartObject] = useState({\r\n        itemsInCart: [],\r\n        showModal: false,\r\n        wallet: \"5000\"\r\n    });\r\n    \r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/checkOut\">\r\n            <CheckOut cartObject={cartObject} setCartObject={setCartObject} />\r\n          </Route>\r\n          <Route path=\"/:id\">\r\n            <CatPage />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Main cartObject={cartObject} setCartObject={setCartObject} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}